/*
  ==============================================================================

    This file was auto-generated by the Introjucer!

    It contains the basic startup code for a Juce application.

  ==============================================================================
*/

#ifndef PLUGINEDITOR_H_INCLUDED
#define PLUGINEDITOR_H_INCLUDED

#include "../JuceLibraryCode/JuceHeader.h"
#include "PluginProcessor.h"


//==============================================================================
/**
*/
class FilterAudioProcessorEditor  : public AudioProcessorEditor,
                                    public Slider::Listener,
                                    public Button::Listener,
                                    public Timer
{
public:
    FilterAudioProcessorEditor (FilterAudioProcessor* ownerFilter);
    ~FilterAudioProcessorEditor();

    
    //==============================================================================
    void timerCallback() override;
    void paint (Graphics&) override;
    void resized() override;
    void sliderValueChanged (Slider*) override;
    void buttonClicked (Button*) override;
    
private:
    Label infoLabel, gainLabel, lowPassFrequencyLabel;
    Slider gainSlider, lowPassFrequencySlider;
    ToggleButton lowPassFilterEnabledButton;

 ScopedPointer<ResizableCornerComponent> resizer;
    ComponentBoundsConstrainer resizeLimits;
    
    AudioPlayHead::CurrentPositionInfo lastDisplayedPosition;
    
    FilterAudioProcessor* getProcessor() const
    {
        return static_cast <FilterAudioProcessor*> (getAudioProcessor());
    }
    
    void displayPositionInfo (const AudioPlayHead::CurrentPositionInfo& pos);
};


#endif  // PLUGINEDITOR_H_INCLUDED
